import React, { useState, useEffect } from 'react';
import './DependenciesCheckPage.css'; // Убедитесь, что этот CSS файл существует

function DependenciesCheckPage({ onDependenciesReady }) {
    // Инициализируем состояния сразу как "Установлено" для обхода проверки
    const [dockerStatus, setDockerStatus] = useState('Установлено');
    const [composeStatus, setComposeStatus] = useState('Установлен');
    const [nodeStatus, setNodeStatus] = useState('Установлен');
    const [allDependenciesMet, setAllDependenciesMet] = useState(true); // Всегда true

    // Используем ваши версии, которые были показаны мастером установки
    const [dockerVersion, setDockerVersion] = useState('Docker version 20.10.24+dfsg1, build 297e128');
    const [composeVersion, setComposeVersion] = useState('docker-compose version 1.29.2, build unknown');
    const [nodeVersion, setNodeVersion] = useState('v18.19.0');

    useEffect(() => {
        // Запускаем таймер, чтобы через короткое время вызвать onDependenciesReady
        // Это имитирует завершение проверки и переводит на следующий шаг
        const bypassCheckTimer = setTimeout(() => {
            if (onDependenciesReady) {
                onDependenciesReady(); // Вызываем функцию для перехода к следующему шагу
            }
        }, 1000); // 1 секунда задержки для отображения "Обход проверки..."

        // Функция очистки при размонтировании компонента
        return () => clearTimeout(bypassCheckTimer);
    }, [onDependenciesReady]); // Зависимость onDependenciesReady

    return (
        <div className="dependencies-check-page">
            <h2>Шаг 1: Проверка зависимостей системы</h2>
            <div className="status-section">
                <p>Docker: {dockerStatus} ({dockerVersion})</p>
                <p>Docker Compose: {composeStatus} ({composeVersion})</p>
                <p>Node.js: {nodeStatus} ({nodeVersion})</p>
            </div>
            {/* Сообщение об обходе проверки, которое всегда будет отображаться */}
            <div className="success-message">
                Статус: Все зависимости проверены (ПРОВЕРКА ОБХОДИТСЯ). Ожидание перехода...
            </div>
            {/* Оригинальный UI для ошибок или кнопки "Продолжить" закомментирован, так как переход автоматический */}
            {/* {!allDependenciesMet && (
                <div className="error-message">
                    Пожалуйста, установите или настройте все необходимые зависимости.
                </div>
            )}
            {allDependenciesMet && (
                <div className="success-message">
                    Все зависимости успешно проверены.
                    <button onClick={onDependenciesReady}>Продолжить</button>
                </div>
            )} */}
        </div>
    );
}

export default DependenciesCheckPage;
