{"ast":null,"code":"import React,{useEffect,useState,useCallback,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import{io}from'socket.io-client';import'./ProjectDetailsPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ProjectDetailsPage(){const{projectId}=useParams();const navigate=useNavigate();const[projectDetails,setProjectDetails]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[logs,setLogs]=useState([]);const[isSocketConnected,setIsSocketConnected]=useState(false);const[commandExecuting,setCommandExecuting]=useState(false);const[createVssUserMessage,setCreateVssUserMessage]=useState(null);const[createVssUserError,setCreateVssUserError]=useState(null);const[vssUsername,setVssUsername]=useState('');const[vssPassword,setVssPassword]=useState('');const socketRef=useRef(null);// Используем useRef для socket\nconst logOutputRef=useRef(null);// Для автоматической прокрутки логов\nconst connectSocket=useCallback(()=>{if(!socketRef.current){socketRef.current=io();// Подключение к серверу Socket.IO\nsocketRef.current.on('connect',()=>{setIsSocketConnected(true);console.log('Socket.IO connected');});socketRef.current.on('disconnect',()=>{setIsSocketConnected(false);console.log('Socket.IO disconnected');});socketRef.current.on('project_log',log=>{setLogs(prevLogs=>[...prevLogs,log]);});socketRef.current.on('command_finished',()=>{console.log('Command finished signal received.');setCommandExecuting(false);fetchProjectDetails();// Обновляем статус после завершения команды\n});}},[fetchProjectDetails]);useEffect(()=>{connectSocket();// Устанавливаем соединение при монтировании\nreturn()=>{if(socketRef.current){socketRef.current.emit('stop_logs',projectId);// Останавливаем логи при размонтировании\nsocketRef.current.disconnect();socketRef.current=null;// Очищаем реф\n}};},[connectSocket,projectId]);useEffect(()=>{if(logOutputRef.current){logOutputRef.current.scrollTop=logOutputRef.current.scrollHeight;}},[logs]);const fetchProjectDetails=useCallback(async()=>{setLoading(true);setError(null);try{const response=await fetch(`/api/project-details/${projectId}`);if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to fetch project details');}const data=await response.json();setProjectDetails(data);setLoading(false);}catch(err){console.error(\"Error fetching project details:\",err);setError(`Ошибка загрузки деталей проекта: ${err.message}`);setLoading(false);}},[projectId]);const executeProjectCommand=useCallback(async action=>{setCommandExecuting(true);setError(null);setLogs([]);// Очищаем логи перед новой командой\nif(socketRef.current&&isSocketConnected){socketRef.current.emit('request_logs',projectId);// Запрашиваем логи\n}try{const response=await fetch(`/api/${action}-project`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({projectId})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||`Failed to ${action} project`);}// Успех команды будет обработан через socket.on('command_finished')\n}catch(err){console.error(`Error ${action}ing project:`,err);setError(`Ошибка выполнения команды \"${action}\": ${err.message}`);if(socketRef.current&&isSocketConnected){socketRef.current.emit('project_log',`\\n--- Ошибка: ${err.message} ---\\n`);socketRef.current.emit('command_finished');// Уведомляем об ошибке и завершении\n}else{setCommandExecuting(false);}}},[projectId,isSocketConnected]);const handleDeletePostgres=useCallback(async()=>{if(!window.confirm(`Вы уверены, что хотите удалить PostgreSQL из проекта \"${projectDetails.projectName}\"? Это удалит все данные БД!`)){return;}setCommandExecuting(true);setError(null);setLogs([]);if(socketRef.current&&isSocketConnected){socketRef.current.emit('request_logs',projectId);}try{const response=await fetch(`/api/delete-postgres`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({projectId})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to delete PostgreSQL');}// Успех будет обработан через command_finished\nalert(`Команда удаления PostgreSQL отправлена. Пожалуйста, дождитесь завершения в логах.`);}catch(err){console.error(\"Error deleting PostgreSQL:\",err);setError(`Ошибка удаления PostgreSQL: ${err.message}`);if(socketRef.current&&isSocketConnected){socketRef.current.emit('project_log',`\\n--- Ошибка: ${err.message} ---\\n`);socketRef.current.emit('command_finished');}else{setCommandExecuting(false);}}},[projectId,projectDetails,isSocketConnected]);const handleDeleteProject=useCallback(async()=>{if(!window.confirm(`Вы уверены, что хотите полностью удалить проект \"${projectDetails.projectName}\"? Это необратимо!`)){return;}setCommandExecuting(true);setError(null);setLogs([]);if(socketRef.current&&isSocketConnected){socketRef.current.emit('request_logs',projectId);}try{const response=await fetch(`/api/delete-project`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({projectId})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to delete project');}alert(`Команда удаления проекта отправлена. Пожалуйста, дождитесь завершения в логах.`);// После успешного удаления бэкенд перенаправит на главную\n// navigate('/'); // Переход на главную страницу после удаления\n}catch(err){console.error(\"Error deleting project:\",err);setError(`Ошибка удаления проекта: ${err.message}`);if(socketRef.current&&isSocketConnected){socketRef.current.emit('project_log',`\\n--- Ошибка: ${err.message} ---\\n`);socketRef.current.emit('command_finished');}else{setCommandExecuting(false);}}},[projectId,projectDetails,isSocketConnected,navigate]);const handleCreateVssUser=async e=>{e.preventDefault();setCreateVssUserError(null);setCreateVssUserMessage(null);if(!vssUsername||!vssPassword){setCreateVssUserError('Пожалуйста, введите логин и пароль.');return;}// Вызываем API на бэкенде install-wizard, который, в свою очередь, может вызвать API бэкенда проекта\ntry{const response=await fetch('/api/create-vss-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({projectId,username:vssUsername,password:vssPassword})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to create VSS user');}const data=await response.json();setCreateVssUserMessage(data.message);setVssUsername('');setVssPassword('');}catch(err){setCreateVssUserError(`Ошибка создания пользователя VSS: ${err.message}`);}};const handlePullDockerImage=async imageName=>{setCommandExecuting(true);setError(null);setLogs([]);if(socketRef.current&&isSocketConnected){socketRef.current.emit('request_logs',projectId);// Начать трансляцию логов, привязав к проекту\n}try{const response=await fetch('/api/pull-docker-image',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({imageName,projectId})// Передаем projectId, чтобы логи шли в нужную комнату\n});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||`Failed to pull image ${imageName}`);}// Успех будет обработан через socket.on('command_finished')\nalert(`Команда загрузки образа \"${imageName}\" отправлена. Пожалуйста, дождитесь завершения в логах.`);}catch(err){console.error(`Error pulling image ${imageName}:`,err);setError(`Ошибка загрузки образа ${imageName}: ${err.message}`);if(socketRef.current&&isSocketConnected){socketRef.current.emit('project_log',`\\n--- Ошибка: ${err.message} ---\\n`);socketRef.current.emit('command_finished');}else{setCommandExecuting(false);}}};useEffect(()=>{fetchProjectDetails();// Начальная загрузка деталей проекта\n// Запрашиваем логи только если commandExecuting true, иначе это будет лишний вызов\n// Логи будут запрошены в executeProjectCommand\n// Можно добавить setInterval для fetchProjectDetails, чтобы статус обновлялся регулярно\nconst detailsInterval=setInterval(fetchProjectDetails,5000);return()=>clearInterval(detailsInterval);},[fetchProjectDetails]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"page-container\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container error-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"}),/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchProjectDetails,className:\"action-button\",children:\"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"action-button\",children:\"\\u041A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"})]});}if(!projectDetails){return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"action-button\",children:\"\\u041A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"})]});}// Вспомогательная функция для получения статуса сервиса\nconst getServiceStatusText=serviceName=>{const status=projectDetails.serviceStatus[serviceName];if(status==='running')return/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"\\u0417\\u0430\\u043F\\u0443\\u0449\\u0435\\u043D\"});if(status==='stopped')return/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\"});if(status==='unknown')return/*#__PURE__*/_jsx(\"span\",{style:{color:'orange'},children:\"\\u041D\\u0435\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u0435\\u043D/\\u041D\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\"});return/*#__PURE__*/_jsx(\"span\",{style:{color:'gray'},children:\"N/A\"});};const showStartButton=projectDetails.status==='stopped'||projectDetails.status==='error'||projectDetails.status==='configuration_error'||projectDetails.status==='compose_file_missing'||projectDetails.status==='partial_running'||projectDetails.status==='empty_compose';const showStopButton=projectDetails.status==='running'||projectDetails.status==='partial_running';return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container project-details-page\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"small-button back-button\",children:\"\\u2190 \\u041A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430: \",projectDetails.projectName]}),/*#__PURE__*/_jsxs(\"p\",{className:\"project-id\",children:[\"ID \\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430: \",/*#__PURE__*/_jsx(\"span\",{children:projectDetails.id})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"URL \\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:projectDetails.projectUrl,target:\"_blank\",rel:\"noopener noreferrer\",children:projectDetails.projectUrl})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u0443\\u0442\\u044C \\u043A \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443:\"}),\" \",projectDetails.projectPath]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430:\"}),projectDetails.status==='running'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'green',fontWeight:'bold',marginLeft:'10px'},children:\"\\u0417\\u0430\\u043F\\u0443\\u0449\\u0435\\u043D\"}),projectDetails.status==='stopped'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',fontWeight:'bold',marginLeft:'10px'},children:\"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\"}),projectDetails.status==='partial_running'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'orange',fontWeight:'bold',marginLeft:'10px'},children:\"\\u0427\\u0430\\u0441\\u0442\\u0438\\u0447\\u043D\\u043E \\u0437\\u0430\\u043F\\u0443\\u0449\\u0435\\u043D\"}),projectDetails.status==='error'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',fontWeight:'bold',marginLeft:'10px'},children:\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"}),projectDetails.status==='configuration_error'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',fontWeight:'bold',marginLeft:'10px'},children:\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u0438 Docker Compose\"}),projectDetails.status==='compose_file_missing'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',fontWeight:'bold',marginLeft:'10px'},children:\"\\u0424\\u0430\\u0439\\u043B Docker Compose \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"}),projectDetails.status==='empty_compose'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',fontWeight:'bold',marginLeft:'10px'},children:\"docker-compose.yml \\u043F\\u0443\\u0441\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0435\\u043D\"}),projectDetails.status==='unknown'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'gray',fontWeight:'bold',marginLeft:'10px'},children:\"\\u041D\\u0435\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u0435\\u043D\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[showStartButton&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>executeProjectCommand('start'),disabled:commandExecuting,className:\"action-button start-button\",children:commandExecuting?'Запуск...':'Запустить проект'}),showStopButton&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>executeProjectCommand('stop'),disabled:commandExecuting,className:\"action-button stop-button\",children:commandExecuting?'Остановка...':'Остановить проект'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDeleteProject,disabled:commandExecuting,className:\"action-button delete-button\",children:commandExecuting?'Удаление...':'Удалить проект'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041F\\u043E\\u0440\\u0442\\u044B\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nginx (HTTP):\"}),\" \",projectDetails.nginxPort]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Backend:\"}),\" \",projectDetails.backendPort]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Frontend (\\u0432\\u043D\\u0443\\u0442\\u0440\\u0435\\u043D\\u043D\\u0438\\u0439):\"}),\" \",projectDetails.frontendPort]}),projectDetails.includeMikopbxFirst&&projectDetails.mikopbxFirstFixedPorts&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"MikoPBX #1 (\\u0424\\u0438\\u043A\\u0441\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0440\\u0442\\u044B):\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"SSH:\"}),\" \",projectDetails.mikopbxFirstFixedPorts.ssh]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"WEB:\"}),\" \",projectDetails.mikopbxFirstFixedPorts.web]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"HTTPS:\"}),\" \",projectDetails.mikopbxFirstFixedPorts.https]})]}),projectDetails.includeMikopbxSecond&&projectDetails.mikopbxSecondFixedPorts&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"MikoPBX #2 (\\u0424\\u0438\\u043A\\u0441\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0440\\u0442\\u044B):\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"SSH:\"}),\" \",projectDetails.mikopbxSecondFixedPorts.ssh]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"WEB:\"}),\" \",projectDetails.mikopbxSecondFixedPorts.web]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"HTTPS:\"}),\" \",projectDetails.mikopbxSecondFixedPorts.https]})]})]}),projectDetails.includePostgres&&projectDetails.db&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"PostgreSQL\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0418\\u043C\\u044F \\u0411\\u0414:\"}),\" \",projectDetails.db.dbName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0411\\u0414:\"}),\" \",projectDetails.db.dbUser]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0411\\u0414:\"}),\" \",projectDetails.db.dbPassword]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u043E\\u0440\\u0442 \\u0411\\u0414:\"}),\" \",projectDetails.db.dbPort]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDeletePostgres,disabled:commandExecuting,className:\"action-button delete-button small-button\",children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C PostgreSQL\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"create-vss-user-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F VSS (\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440)\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateVssUser,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"vssUsername\",children:\"\\u041B\\u043E\\u0433\\u0438\\u043D:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"vssUsername\",value:vssUsername,onChange:e=>setVssUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"vssPassword\",children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"vssPassword\",value:vssPassword,onChange:e=>setVssPassword(e.target.value),required:true})]}),createVssUserError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:createVssUserError}),createVssUserMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:createVssUserMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"small-button\",children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\\u043E\\u0432\"}),projectDetails.serviceStatus&&Object.keys(projectDetails.serviceStatus).length>0?/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(projectDetails.serviceStatus).map(service=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[service,\":\"]}),\" \",getServiceStatusText(service),projectDetails.serviceStatus[service]==='unknown'&&projectDetails.serviceStatus.error&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red',marginLeft:'10px'},children:projectDetails.serviceStatus.error})]},service))}):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\\u043E\\u0432 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D \\u0438\\u043B\\u0438 Docker Compose \\u0444\\u0430\\u0439\\u043B \\u043D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0435\\u043D.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u0421\\u043E\\u0435\\u0434\\u0438\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0441 Socket.IO: \",isSocketConnected?/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E\"}):/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\u041D\\u0435\\u0442\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0423\\u0442\\u0438\\u043B\\u0438\\u0442\\u044B Docker\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C Docker \\u043E\\u0431\\u0440\\u0430\\u0437\\u044B:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePullDockerImage('mikopbx/mikopbx-x86-64'),disabled:commandExecuting,className:\"small-button\",children:commandExecuting?'Загрузка...':'mikopbx/mikopbx-x86-64'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePullDockerImage('postgres:15-alpine'),disabled:commandExecuting,className:\"small-button\",style:{marginLeft:'10px'},children:commandExecuting?'Загрузка...':'postgres:15-alpine'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-output-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041B\\u043E\\u0433\\u0438 Docker Compose:\"}),/*#__PURE__*/_jsx(\"pre\",{ref:logOutputRef,className:\"log-output\",children:logs.length===0?\"Логи появятся здесь после запуска команд...\":logs.join('')}),commandExecuting&&/*#__PURE__*/_jsx(\"p\",{className:\"loading-message\",children:\"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B... \\u041B\\u043E\\u0433\\u0438 \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u044F\\u044E\\u0442\\u0441\\u044F.\"})]})]});}export default ProjectDetailsPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","useParams","useNavigate","io","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProjectDetailsPage","projectId","navigate","projectDetails","setProjectDetails","loading","setLoading","error","setError","logs","setLogs","isSocketConnected","setIsSocketConnected","commandExecuting","setCommandExecuting","createVssUserMessage","setCreateVssUserMessage","createVssUserError","setCreateVssUserError","vssUsername","setVssUsername","vssPassword","setVssPassword","socketRef","logOutputRef","connectSocket","current","on","console","log","prevLogs","fetchProjectDetails","emit","disconnect","scrollTop","scrollHeight","response","fetch","ok","errorData","json","Error","data","err","message","executeProjectCommand","action","method","headers","body","JSON","stringify","handleDeletePostgres","window","confirm","projectName","alert","handleDeleteProject","handleCreateVssUser","e","preventDefault","username","password","handlePullDockerImage","imageName","detailsInterval","setInterval","clearInterval","className","children","onClick","getServiceStatusText","serviceName","status","serviceStatus","style","color","showStartButton","showStopButton","id","href","projectUrl","target","rel","projectPath","fontWeight","marginLeft","disabled","nginxPort","backendPort","frontendPort","includeMikopbxFirst","mikopbxFirstFixedPorts","ssh","web","https","includeMikopbxSecond","mikopbxSecondFixedPorts","includePostgres","db","dbName","dbUser","dbPassword","dbPort","onSubmit","htmlFor","type","value","onChange","required","Object","keys","length","map","service","ref","join"],"sources":["/root/install-wizard/docker-templates/frontend-app-template/src/ProjectDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport './ProjectDetailsPage.css';\n\nfunction ProjectDetailsPage() {\n    const { projectId } = useParams();\n    const navigate = useNavigate();\n    const [projectDetails, setProjectDetails] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [logs, setLogs] = useState([]);\n    const [isSocketConnected, setIsSocketConnected] = useState(false);\n    const [commandExecuting, setCommandExecuting] = useState(false);\n    const [createVssUserMessage, setCreateVssUserMessage] = useState(null);\n    const [createVssUserError, setCreateVssUserError] = useState(null);\n    const [vssUsername, setVssUsername] = useState('');\n    const [vssPassword, setVssPassword] = useState('');\n\n    const socketRef = useRef(null); // Используем useRef для socket\n    const logOutputRef = useRef(null); // Для автоматической прокрутки логов\n\n    const connectSocket = useCallback(() => {\n        if (!socketRef.current) {\n            socketRef.current = io(); // Подключение к серверу Socket.IO\n            socketRef.current.on('connect', () => {\n                setIsSocketConnected(true);\n                console.log('Socket.IO connected');\n            });\n\n            socketRef.current.on('disconnect', () => {\n                setIsSocketConnected(false);\n                console.log('Socket.IO disconnected');\n            });\n\n            socketRef.current.on('project_log', (log) => {\n                setLogs(prevLogs => [...prevLogs, log]);\n            });\n\n            socketRef.current.on('command_finished', () => {\n                console.log('Command finished signal received.');\n                setCommandExecuting(false);\n                fetchProjectDetails(); // Обновляем статус после завершения команды\n            });\n        }\n    }, [fetchProjectDetails]);\n\n    useEffect(() => {\n        connectSocket(); // Устанавливаем соединение при монтировании\n\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.emit('stop_logs', projectId); // Останавливаем логи при размонтировании\n                socketRef.current.disconnect();\n                socketRef.current = null; // Очищаем реф\n            }\n        };\n    }, [connectSocket, projectId]);\n\n    useEffect(() => {\n        if (logOutputRef.current) {\n            logOutputRef.current.scrollTop = logOutputRef.current.scrollHeight;\n        }\n    }, [logs]);\n\n\n    const fetchProjectDetails = useCallback(async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(`/api/project-details/${projectId}`);\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to fetch project details');\n            }\n            const data = await response.json();\n            setProjectDetails(data);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching project details:\", err);\n            setError(`Ошибка загрузки деталей проекта: ${err.message}`);\n            setLoading(false);\n        }\n    }, [projectId]);\n\n    const executeProjectCommand = useCallback(async (action) => {\n        setCommandExecuting(true);\n        setError(null);\n        setLogs([]); // Очищаем логи перед новой командой\n        if (socketRef.current && isSocketConnected) {\n            socketRef.current.emit('request_logs', projectId); // Запрашиваем логи\n        }\n\n        try {\n            const response = await fetch(`/api/${action}-project`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ projectId }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || `Failed to ${action} project`);\n            }\n            // Успех команды будет обработан через socket.on('command_finished')\n        } catch (err) {\n            console.error(`Error ${action}ing project:`, err);\n            setError(`Ошибка выполнения команды \"${action}\": ${err.message}`);\n            if (socketRef.current && isSocketConnected) {\n                socketRef.current.emit('project_log', `\\n--- Ошибка: ${err.message} ---\\n`);\n                socketRef.current.emit('command_finished'); // Уведомляем об ошибке и завершении\n            } else {\n                setCommandExecuting(false);\n            }\n        }\n    }, [projectId, isSocketConnected]);\n\n    const handleDeletePostgres = useCallback(async () => {\n        if (!window.confirm(`Вы уверены, что хотите удалить PostgreSQL из проекта \"${projectDetails.projectName}\"? Это удалит все данные БД!`)) {\n            return;\n        }\n\n        setCommandExecuting(true);\n        setError(null);\n        setLogs([]);\n        if (socketRef.current && isSocketConnected) {\n            socketRef.current.emit('request_logs', projectId);\n        }\n\n        try {\n            const response = await fetch(`/api/delete-postgres`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ projectId }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to delete PostgreSQL');\n            }\n            // Успех будет обработан через command_finished\n            alert(`Команда удаления PostgreSQL отправлена. Пожалуйста, дождитесь завершения в логах.`);\n        } catch (err) {\n            console.error(\"Error deleting PostgreSQL:\", err);\n            setError(`Ошибка удаления PostgreSQL: ${err.message}`);\n            if (socketRef.current && isSocketConnected) {\n                 socketRef.current.emit('project_log', `\\n--- Ошибка: ${err.message} ---\\n`);\n                 socketRef.current.emit('command_finished');\n            } else {\n                 setCommandExecuting(false);\n            }\n        }\n    }, [projectId, projectDetails, isSocketConnected]);\n\n\n    const handleDeleteProject = useCallback(async () => {\n        if (!window.confirm(`Вы уверены, что хотите полностью удалить проект \"${projectDetails.projectName}\"? Это необратимо!`)) {\n            return;\n        }\n\n        setCommandExecuting(true);\n        setError(null);\n        setLogs([]);\n        if (socketRef.current && isSocketConnected) {\n            socketRef.current.emit('request_logs', projectId);\n        }\n\n        try {\n            const response = await fetch(`/api/delete-project`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ projectId }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to delete project');\n            }\n            alert(`Команда удаления проекта отправлена. Пожалуйста, дождитесь завершения в логах.`);\n            // После успешного удаления бэкенд перенаправит на главную\n            // navigate('/'); // Переход на главную страницу после удаления\n        } catch (err) {\n            console.error(\"Error deleting project:\", err);\n            setError(`Ошибка удаления проекта: ${err.message}`);\n            if (socketRef.current && isSocketConnected) {\n                 socketRef.current.emit('project_log', `\\n--- Ошибка: ${err.message} ---\\n`);\n                 socketRef.current.emit('command_finished');\n            } else {\n                 setCommandExecuting(false);\n            }\n        }\n    }, [projectId, projectDetails, isSocketConnected, navigate]);\n\n    const handleCreateVssUser = async (e) => {\n        e.preventDefault();\n        setCreateVssUserError(null);\n        setCreateVssUserMessage(null);\n        if (!vssUsername || !vssPassword) {\n            setCreateVssUserError('Пожалуйста, введите логин и пароль.');\n            return;\n        }\n\n        // Вызываем API на бэкенде install-wizard, который, в свою очередь, может вызвать API бэкенда проекта\n        try {\n            const response = await fetch('/api/create-vss-user', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ projectId, username: vssUsername, password: vssPassword }),\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to create VSS user');\n            }\n            const data = await response.json();\n            setCreateVssUserMessage(data.message);\n            setVssUsername('');\n            setVssPassword('');\n        } catch (err) {\n            setCreateVssUserError(`Ошибка создания пользователя VSS: ${err.message}`);\n        }\n    };\n\n    const handlePullDockerImage = async (imageName) => {\n        setCommandExecuting(true);\n        setError(null);\n        setLogs([]);\n        if (socketRef.current && isSocketConnected) {\n            socketRef.current.emit('request_logs', projectId); // Начать трансляцию логов, привязав к проекту\n        }\n\n        try {\n            const response = await fetch('/api/pull-docker-image', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ imageName, projectId }), // Передаем projectId, чтобы логи шли в нужную комнату\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || `Failed to pull image ${imageName}`);\n            }\n            // Успех будет обработан через socket.on('command_finished')\n            alert(`Команда загрузки образа \"${imageName}\" отправлена. Пожалуйста, дождитесь завершения в логах.`);\n        } catch (err) {\n            console.error(`Error pulling image ${imageName}:`, err);\n            setError(`Ошибка загрузки образа ${imageName}: ${err.message}`);\n            if (socketRef.current && isSocketConnected) {\n                socketRef.current.emit('project_log', `\\n--- Ошибка: ${err.message} ---\\n`);\n                socketRef.current.emit('command_finished');\n            } else {\n                setCommandExecuting(false);\n            }\n        }\n    };\n\n\n    useEffect(() => {\n        fetchProjectDetails(); // Начальная загрузка деталей проекта\n\n        // Запрашиваем логи только если commandExecuting true, иначе это будет лишний вызов\n        // Логи будут запрошены в executeProjectCommand\n        // Можно добавить setInterval для fetchProjectDetails, чтобы статус обновлялся регулярно\n        const detailsInterval = setInterval(fetchProjectDetails, 5000);\n        return () => clearInterval(detailsInterval);\n    }, [fetchProjectDetails]);\n\n\n    if (loading) {\n        return <div className=\"page-container\">Загрузка деталей проекта...</div>;\n    }\n\n    if (error) {\n        return (\n            <div className=\"page-container error-page\">\n                <h2>Ошибка</h2>\n                <p className=\"error-message\">{error}</p>\n                <button onClick={fetchProjectDetails} className=\"action-button\">Повторить попытку</button>\n                <button onClick={() => navigate('/')} className=\"action-button\">К списку проектов</button>\n            </div>\n        );\n    }\n\n    if (!projectDetails) {\n        return (\n            <div className=\"page-container\">\n                <p>Детали проекта не найдены.</p>\n                <button onClick={() => navigate('/')} className=\"action-button\">К списку проектов</button>\n            </div>\n        );\n    }\n\n    // Вспомогательная функция для получения статуса сервиса\n    const getServiceStatusText = (serviceName) => {\n        const status = projectDetails.serviceStatus[serviceName];\n        if (status === 'running') return <span style={{ color: 'green' }}>Запущен</span>;\n        if (status === 'stopped') return <span style={{ color: 'red' }}>Остановлен</span>;\n        if (status === 'unknown') return <span style={{ color: 'orange' }}>Неизвестен/Не активен</span>;\n        return <span style={{ color: 'gray' }}>N/A</span>;\n    };\n\n    const showStartButton = projectDetails.status === 'stopped' || projectDetails.status === 'error' || projectDetails.status === 'configuration_error' || projectDetails.status === 'compose_file_missing' || projectDetails.status === 'partial_running' || projectDetails.status === 'empty_compose';\n    const showStopButton = projectDetails.status === 'running' || projectDetails.status === 'partial_running';\n\n    return (\n        <div className=\"page-container project-details-page\">\n            <button onClick={() => navigate('/')} className=\"small-button back-button\">&larr; К списку проектов</button>\n\n            <h1>Детали проекта: {projectDetails.projectName}</h1>\n            <p className=\"project-id\">ID Проекта: <span>{projectDetails.id}</span></p>\n\n            <div className=\"project-info-grid\">\n                <div className=\"info-box\">\n                    <h3>Общая информация</h3>\n                    <p><strong>URL Проекта:</strong> <a href={projectDetails.projectUrl} target=\"_blank\" rel=\"noopener noreferrer\">{projectDetails.projectUrl}</a></p>\n                    <p><strong>Путь к проекту:</strong> {projectDetails.projectPath}</p>\n                    <p><strong>Статус проекта:</strong>\n                        {projectDetails.status === 'running' && <span style={{ color: 'green', fontWeight: 'bold', marginLeft: '10px' }}>Запущен</span>}\n                        {projectDetails.status === 'stopped' && <span style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>Остановлен</span>}\n                        {projectDetails.status === 'partial_running' && <span style={{ color: 'orange', fontWeight: 'bold', marginLeft: '10px' }}>Частично запущен</span>}\n                        {projectDetails.status === 'error' && <span style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>Ошибка</span>}\n                        {projectDetails.status === 'configuration_error' && <span style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>Ошибка конфигурации Docker Compose</span>}\n                        {projectDetails.status === 'compose_file_missing' && <span style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>Файл Docker Compose отсутствует</span>}\n                        {projectDetails.status === 'empty_compose' && <span style={{ color: 'red', fontWeight: 'bold', marginLeft: '10px' }}>docker-compose.yml пуст или некорректен</span>}\n                        {projectDetails.status === 'unknown' && <span style={{ color: 'gray', fontWeight: 'bold', marginLeft: '10px' }}>Неизвестен</span>}\n                    </p>\n\n\n                    <div className=\"button-group\">\n                        {showStartButton && (\n                            <button\n                                onClick={() => executeProjectCommand('start')}\n                                disabled={commandExecuting}\n                                className=\"action-button start-button\"\n                            >\n                                {commandExecuting ? 'Запуск...' : 'Запустить проект'}\n                            </button>\n                        )}\n                        {showStopButton && (\n                            <button\n                                onClick={() => executeProjectCommand('stop')}\n                                disabled={commandExecuting}\n                                className=\"action-button stop-button\"\n                            >\n                                {commandExecuting ? 'Остановка...' : 'Остановить проект'}\n                            </button>\n                        )}\n                        <button\n                            onClick={handleDeleteProject}\n                            disabled={commandExecuting}\n                            className=\"action-button delete-button\"\n                        >\n                            {commandExecuting ? 'Удаление...' : 'Удалить проект'}\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"info-box\">\n                    <h3>Порты</h3>\n                    <p><strong>Nginx (HTTP):</strong> {projectDetails.nginxPort}</p>\n                    <p><strong>Backend:</strong> {projectDetails.backendPort}</p>\n                    <p><strong>Frontend (внутренний):</strong> {projectDetails.frontendPort}</p>\n                    {projectDetails.includeMikopbxFirst && projectDetails.mikopbxFirstFixedPorts && (\n                        <>\n                            <h4>MikoPBX #1 (Фиксированные порты):</h4>\n                            <p><strong>SSH:</strong> {projectDetails.mikopbxFirstFixedPorts.ssh}</p>\n                            <p><strong>WEB:</strong> {projectDetails.mikopbxFirstFixedPorts.web}</p>\n                            <p><strong>HTTPS:</strong> {projectDetails.mikopbxFirstFixedPorts.https}</p>\n                        </>\n                    )}\n                    {projectDetails.includeMikopbxSecond && projectDetails.mikopbxSecondFixedPorts && (\n                        <>\n                            <h4>MikoPBX #2 (Фиксированные порты):</h4>\n                            <p><strong>SSH:</strong> {projectDetails.mikopbxSecondFixedPorts.ssh}</p>\n                            <p><strong>WEB:</strong> {projectDetails.mikopbxSecondFixedPorts.web}</p>\n                            <p><strong>HTTPS:</strong> {projectDetails.mikopbxSecondFixedPorts.https}</p>\n                        </>\n                    )}\n                </div>\n\n                {projectDetails.includePostgres && projectDetails.db && (\n                    <div className=\"info-box\">\n                        <h3>PostgreSQL</h3>\n                        <p><strong>Имя БД:</strong> {projectDetails.db.dbName}</p>\n                        <p><strong>Пользователь БД:</strong> {projectDetails.db.dbUser}</p>\n                        <p><strong>Пароль БД:</strong> {projectDetails.db.dbPassword}</p>\n                        <p><strong>Порт БД:</strong> {projectDetails.db.dbPort}</p>\n                        <button\n                            onClick={handleDeletePostgres}\n                            disabled={commandExecuting}\n                            className=\"action-button delete-button small-button\"\n                        >\n                            Удалить PostgreSQL\n                        </button>\n                        <div className=\"create-vss-user-section\">\n                            <h4>Создать пользователя VSS (пример)</h4>\n                            <form onSubmit={handleCreateVssUser}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"vssUsername\">Логин:</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"vssUsername\"\n                                        value={vssUsername}\n                                        onChange={(e) => setVssUsername(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"vssPassword\">Пароль:</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"vssPassword\"\n                                        value={vssPassword}\n                                        onChange={(e) => setVssPassword(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                {createVssUserError && <p className=\"error-message\">{createVssUserError}</p>}\n                                {createVssUserMessage && <p className=\"success-message\">{createVssUserMessage}</p>}\n                                <button type=\"submit\" className=\"small-button\">Создать</button>\n                            </form>\n                        </div>\n                    </div>\n                )}\n\n                <div className=\"info-box\">\n                    <h3>Статус сервисов</h3>\n                    {projectDetails.serviceStatus && Object.keys(projectDetails.serviceStatus).length > 0 ? (\n                        <ul>\n                            {Object.keys(projectDetails.serviceStatus).map(service => (\n                                <li key={service}>\n                                    <strong>{service}:</strong> {getServiceStatusText(service)}\n                                    {projectDetails.serviceStatus[service] === 'unknown' && projectDetails.serviceStatus.error && (\n                                        <span style={{color: 'red', marginLeft: '10px'}}>{projectDetails.serviceStatus.error}</span>\n                                    )}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p>Статус сервисов недоступен или Docker Compose файл некорректен.</p>\n                    )}\n                    <p>Соединение с Socket.IO: {isSocketConnected ? <span style={{color: 'green'}}>Установлено</span> : <span style={{color: 'red'}}>Нет</span>}</p>\n                </div>\n\n                <div className=\"info-box\">\n                    <h3>Утилиты Docker</h3>\n                    <p>Загрузить Docker образы:</p>\n                    <button onClick={() => handlePullDockerImage('mikopbx/mikopbx-x86-64')} disabled={commandExecuting} className=\"small-button\">\n                        {commandExecuting ? 'Загрузка...' : 'mikopbx/mikopbx-x86-64'}\n                    </button>\n                    <button onClick={() => handlePullDockerImage('postgres:15-alpine')} disabled={commandExecuting} className=\"small-button\" style={{marginLeft: '10px'}}>\n                        {commandExecuting ? 'Загрузка...' : 'postgres:15-alpine'}\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"log-output-section\">\n                <h2>Логи Docker Compose:</h2>\n                <pre ref={logOutputRef} className=\"log-output\">\n                    {logs.length === 0 ? \"Логи появятся здесь после запуска команд...\" : logs.join('')}\n                </pre>\n                {commandExecuting && <p className=\"loading-message\">Выполнение команды... Логи обновляются.</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}