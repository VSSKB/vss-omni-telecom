{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./DependenciesCheckPage.css';// Убедитесь, что этот CSS файл существует\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DependenciesCheckPage(_ref){let{onDependenciesReady}=_ref;// Инициализируем состояния сразу как \"Установлено\" для обхода проверки\nconst[dockerStatus,setDockerStatus]=useState('Установлено');const[composeStatus,setComposeStatus]=useState('Установлен');const[nodeStatus,setNodeStatus]=useState('Установлен');const[allDependenciesMet,setAllDependenciesMet]=useState(true);// Всегда true\n// Используем ваши версии, которые были показаны мастером установки\nconst[dockerVersion,setDockerVersion]=useState('Docker version 20.10.24+dfsg1, build 297e128');const[composeVersion,setComposeVersion]=useState('docker-compose version 1.29.2, build unknown');const[nodeVersion,setNodeVersion]=useState('v18.19.0');useEffect(()=>{// Запускаем таймер, чтобы через короткое время вызвать onDependenciesReady\n// Это имитирует завершение проверки и переводит на следующий шаг\nconst bypassCheckTimer=setTimeout(()=>{if(onDependenciesReady){onDependenciesReady();// Вызываем функцию для перехода к следующему шагу\n}},1000);// 1 секунда задержки для отображения \"Обход проверки...\"\n// Функция очистки при размонтировании компонента\nreturn()=>clearTimeout(bypassCheckTimer);},[onDependenciesReady]);// Зависимость onDependenciesReady\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"dependencies-check-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0428\\u0430\\u0433 1: \\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043C\\u043E\\u0441\\u0442\\u0435\\u0439 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-section\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Docker: \",dockerStatus,\" (\",dockerVersion,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Docker Compose: \",composeStatus,\" (\",composeVersion,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Node.js: \",nodeStatus,\" (\",nodeVersion,\")\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \\u0412\\u0441\\u0435 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B (\\u041F\\u0420\\u041E\\u0412\\u0415\\u0420\\u041A\\u0410 \\u041E\\u0411\\u0425\\u041E\\u0414\\u0418\\u0422\\u0421\\u042F). \\u041E\\u0436\\u0438\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434\\u0430...\"})]});}export default DependenciesCheckPage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DependenciesCheckPage","_ref","onDependenciesReady","dockerStatus","setDockerStatus","composeStatus","setComposeStatus","nodeStatus","setNodeStatus","allDependenciesMet","setAllDependenciesMet","dockerVersion","setDockerVersion","composeVersion","setComposeVersion","nodeVersion","setNodeVersion","bypassCheckTimer","setTimeout","clearTimeout","className","children"],"sources":["/root/install-wizard/docker-templates/frontend-app-template/src/DependenciesCheckPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './DependenciesCheckPage.css'; // Убедитесь, что этот CSS файл существует\n\nfunction DependenciesCheckPage({ onDependenciesReady }) {\n    // Инициализируем состояния сразу как \"Установлено\" для обхода проверки\n    const [dockerStatus, setDockerStatus] = useState('Установлено');\n    const [composeStatus, setComposeStatus] = useState('Установлен');\n    const [nodeStatus, setNodeStatus] = useState('Установлен');\n    const [allDependenciesMet, setAllDependenciesMet] = useState(true); // Всегда true\n\n    // Используем ваши версии, которые были показаны мастером установки\n    const [dockerVersion, setDockerVersion] = useState('Docker version 20.10.24+dfsg1, build 297e128');\n    const [composeVersion, setComposeVersion] = useState('docker-compose version 1.29.2, build unknown');\n    const [nodeVersion, setNodeVersion] = useState('v18.19.0');\n\n    useEffect(() => {\n        // Запускаем таймер, чтобы через короткое время вызвать onDependenciesReady\n        // Это имитирует завершение проверки и переводит на следующий шаг\n        const bypassCheckTimer = setTimeout(() => {\n            if (onDependenciesReady) {\n                onDependenciesReady(); // Вызываем функцию для перехода к следующему шагу\n            }\n        }, 1000); // 1 секунда задержки для отображения \"Обход проверки...\"\n\n        // Функция очистки при размонтировании компонента\n        return () => clearTimeout(bypassCheckTimer);\n    }, [onDependenciesReady]); // Зависимость onDependenciesReady\n\n    return (\n        <div className=\"dependencies-check-page\">\n            <h2>Шаг 1: Проверка зависимостей системы</h2>\n            <div className=\"status-section\">\n                <p>Docker: {dockerStatus} ({dockerVersion})</p>\n                <p>Docker Compose: {composeStatus} ({composeVersion})</p>\n                <p>Node.js: {nodeStatus} ({nodeVersion})</p>\n            </div>\n            {/* Сообщение об обходе проверки, которое всегда будет отображаться */}\n            <div className=\"success-message\">\n                Статус: Все зависимости проверены (ПРОВЕРКА ОБХОДИТСЯ). Ожидание перехода...\n            </div>\n            {/* Оригинальный UI для ошибок или кнопки \"Продолжить\" закомментирован, так как переход автоматический */}\n            {/* {!allDependenciesMet && (\n                <div className=\"error-message\">\n                    Пожалуйста, установите или настройте все необходимые зависимости.\n                </div>\n            )}\n            {allDependenciesMet && (\n                <div className=\"success-message\">\n                    Все зависимости успешно проверены.\n                    <button onClick={onDependenciesReady}>Продолжить</button>\n                </div>\n            )} */}\n        </div>\n    );\n}\n\nexport default DependenciesCheckPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,6BAA6B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,QAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAA0B,IAAzB,CAAEC,mBAAoB,CAAC,CAAAD,IAAA,CAClD;AACA,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,aAAa,CAAC,CAC/D,KAAM,CAACW,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,YAAY,CAAC,CAChE,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,YAAY,CAAC,CAC1D,KAAM,CAACe,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEpE;AACA,KAAM,CAACiB,aAAa,CAAEC,gBAAgB,CAAC,CAAGlB,QAAQ,CAAC,8CAA8C,CAAC,CAClG,KAAM,CAACmB,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,8CAA8C,CAAC,CACpG,KAAM,CAACqB,WAAW,CAAEC,cAAc,CAAC,CAAGtB,QAAQ,CAAC,UAAU,CAAC,CAE1DC,SAAS,CAAC,IAAM,CACZ;AACA;AACA,KAAM,CAAAsB,gBAAgB,CAAGC,UAAU,CAAC,IAAM,CACtC,GAAIhB,mBAAmB,CAAE,CACrBA,mBAAmB,CAAC,CAAC,CAAE;AAC3B,CACJ,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV;AACA,MAAO,IAAMiB,YAAY,CAACF,gBAAgB,CAAC,CAC/C,CAAC,CAAE,CAACf,mBAAmB,CAAC,CAAC,CAAE;AAE3B,mBACIH,KAAA,QAAKqB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACpCxB,IAAA,OAAAwB,QAAA,CAAI,4LAAoC,CAAI,CAAC,cAC7CtB,KAAA,QAAKqB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BtB,KAAA,MAAAsB,QAAA,EAAG,UAAQ,CAAClB,YAAY,CAAC,IAAE,CAACQ,aAAa,CAAC,GAAC,EAAG,CAAC,cAC/CZ,KAAA,MAAAsB,QAAA,EAAG,kBAAgB,CAAChB,aAAa,CAAC,IAAE,CAACQ,cAAc,CAAC,GAAC,EAAG,CAAC,cACzDd,KAAA,MAAAsB,QAAA,EAAG,WAAS,CAACd,UAAU,CAAC,IAAE,CAACQ,WAAW,CAAC,GAAC,EAAG,CAAC,EAC3C,CAAC,cAENlB,IAAA,QAAKuB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,oYAEjC,CAAK,CAAC,EAaL,CAAC,CAEd,CAEA,cAAe,CAAArB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}