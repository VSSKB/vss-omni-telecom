{"ast":null,"code":"// /root/install-wizard/docker-templates/frontend-app-template/src/App.js\nimport React,{useState,useEffect}from'react';import'./App.css';import DependenciesCheckPage from'./DependenciesCheckPage';import CreateProjectPage from'./CreateProjectPage';import HomePage from'./HomePage';import ProjectDetailsPage from'./ProjectDetailsPage';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){// В этом гибридном сценарии App.js может управлять внутренней маршрутизацией React\n// или частью UI, которая может быть отображена на разных шагах.\n// Если App.js является основной оберткой, которая содержит public/index.html\n// или его части, то эта логика может быть избыточной для основного потока\n// мастера, который управляется public/script.js.\n// Однако, чтобы не ломать потенциальную внутреннюю логику React,\n// оставим возможность для App.js переключать свои внутренние \"шаги\".\nconst[wizardStep,setWizardStep]=useState('dependenciesCheck');// Предполагаемый начальный шаг React-компонента\nuseEffect(()=>{// Эта часть кода гарантирует, что даже если App.js отвечает за верхнеуровневый шаг,\n// он автоматически перейдет на следующий шаг после \"проверки зависимостей\".\nconst forceStepProgression=setTimeout(()=>{if(wizardStep==='dependenciesCheck'){console.log(\"App.js: Принудительный обход React-проверки. Переход к CreateProjectPage.\");setWizardStep('createProject');// Переключить на следующий предполагаемый шаг React-приложения\n}},1000);// Задержка 1 секунда\nreturn()=>clearTimeout(forceStepProgression);},[wizardStep]);const handleDependenciesReady=()=>{console.log(\"App.js: DependenciesCheckPage сообщил о готовности React-части.\");// Поскольку public/script.js управляет основной навигацией,\n// здесь можно не делать setWizardStep, но можно оставить для консистентности.\n// setWizardStep('createProject');\n};const renderCurrentPage=()=>{// Этот Switch определяет, какой React-компонент будет отображен в зависимости от wizardStep\nswitch(wizardStep){case'dependenciesCheck':return/*#__PURE__*/_jsx(DependenciesCheckPage,{onDependenciesReady:handleDependenciesReady});case'createProject':return/*#__PURE__*/_jsx(CreateProjectPage,{});case'home':return/*#__PURE__*/_jsx(HomePage,{});case'projectDetails':return/*#__PURE__*/_jsx(ProjectDetailsPage,{});default:return/*#__PURE__*/_jsx(HomePage,{});// Страница по умолчанию\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:renderCurrentPage()});}export default App;","map":{"version":3,"names":["React","useState","useEffect","DependenciesCheckPage","CreateProjectPage","HomePage","ProjectDetailsPage","jsx","_jsx","App","wizardStep","setWizardStep","forceStepProgression","setTimeout","console","log","clearTimeout","handleDependenciesReady","renderCurrentPage","onDependenciesReady","className","children"],"sources":["/root/install-wizard/docker-templates/frontend-app-template/src/App.js"],"sourcesContent":["// /root/install-wizard/docker-templates/frontend-app-template/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DependenciesCheckPage from './DependenciesCheckPage';\nimport CreateProjectPage from './CreateProjectPage';\nimport HomePage from './HomePage';\nimport ProjectDetailsPage from './ProjectDetailsPage';\n\nfunction App() {\n    // В этом гибридном сценарии App.js может управлять внутренней маршрутизацией React\n    // или частью UI, которая может быть отображена на разных шагах.\n    // Если App.js является основной оберткой, которая содержит public/index.html\n    // или его части, то эта логика может быть избыточной для основного потока\n    // мастера, который управляется public/script.js.\n    // Однако, чтобы не ломать потенциальную внутреннюю логику React,\n    // оставим возможность для App.js переключать свои внутренние \"шаги\".\n\n    const [wizardStep, setWizardStep] = useState('dependenciesCheck'); // Предполагаемый начальный шаг React-компонента\n\n    useEffect(() => {\n        // Эта часть кода гарантирует, что даже если App.js отвечает за верхнеуровневый шаг,\n        // он автоматически перейдет на следующий шаг после \"проверки зависимостей\".\n        const forceStepProgression = setTimeout(() => {\n            if (wizardStep === 'dependenciesCheck') {\n                console.log(\"App.js: Принудительный обход React-проверки. Переход к CreateProjectPage.\");\n                setWizardStep('createProject'); // Переключить на следующий предполагаемый шаг React-приложения\n            }\n        }, 1000); // Задержка 1 секунда\n\n        return () => clearTimeout(forceStepProgression);\n    }, [wizardStep]);\n\n    const handleDependenciesReady = () => {\n        console.log(\"App.js: DependenciesCheckPage сообщил о готовности React-части.\");\n        // Поскольку public/script.js управляет основной навигацией,\n        // здесь можно не делать setWizardStep, но можно оставить для консистентности.\n        // setWizardStep('createProject');\n    };\n\n    const renderCurrentPage = () => {\n        // Этот Switch определяет, какой React-компонент будет отображен в зависимости от wizardStep\n        switch (wizardStep) {\n            case 'dependenciesCheck':\n                return <DependenciesCheckPage onDependenciesReady={handleDependenciesReady} />;\n            case 'createProject':\n                return <CreateProjectPage />;\n            case 'home':\n                return <HomePage />;\n            case 'projectDetails':\n                return <ProjectDetailsPage />;\n            default:\n                return <HomePage />; // Страница по умолчанию\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            {/* Если App.js отображает только один из этих компонентов в зависимости от своего состояния,\n                тогда renderCurrentPage будет работать.\n                Если public/index.html включает React-приложение как часть одного из своих шагов,\n                тогда эта логика будет работать внутри этого шага. */}\n            {renderCurrentPage()}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,qBAAqB,KAAM,yBAAyB,CAC3D,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CACnD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,mBAAmB,CAAC,CAAE;AAEnEC,SAAS,CAAC,IAAM,CACZ;AACA;AACA,KAAM,CAAAU,oBAAoB,CAAGC,UAAU,CAAC,IAAM,CAC1C,GAAIH,UAAU,GAAK,mBAAmB,CAAE,CACpCI,OAAO,CAACC,GAAG,CAAC,2EAA2E,CAAC,CACxFJ,aAAa,CAAC,eAAe,CAAC,CAAE;AACpC,CACJ,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV,MAAO,IAAMK,YAAY,CAACJ,oBAAoB,CAAC,CACnD,CAAC,CAAE,CAACF,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAO,uBAAuB,CAAGA,CAAA,GAAM,CAClCH,OAAO,CAACC,GAAG,CAAC,iEAAiE,CAAC,CAC9E;AACA;AACA;AACJ,CAAC,CAED,KAAM,CAAAG,iBAAiB,CAAGA,CAAA,GAAM,CAC5B;AACA,OAAQR,UAAU,EACd,IAAK,mBAAmB,CACpB,mBAAOF,IAAA,CAACL,qBAAqB,EAACgB,mBAAmB,CAAEF,uBAAwB,CAAE,CAAC,CAClF,IAAK,eAAe,CAChB,mBAAOT,IAAA,CAACJ,iBAAiB,GAAE,CAAC,CAChC,IAAK,MAAM,CACP,mBAAOI,IAAA,CAACH,QAAQ,GAAE,CAAC,CACvB,IAAK,gBAAgB,CACjB,mBAAOG,IAAA,CAACF,kBAAkB,GAAE,CAAC,CACjC,QACI,mBAAOE,IAAA,CAACH,QAAQ,GAAE,CAAC,CAAE;AAC7B,CACJ,CAAC,CAED,mBACIG,IAAA,QAAKY,SAAS,CAAC,KAAK,CAAAC,QAAA,CAKfH,iBAAiB,CAAC,CAAC,CACnB,CAAC,CAEd,CAEA,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}